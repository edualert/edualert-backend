# Generated by Django 3.0.4 on 2020-04-10 12:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '0011_auto_20200409_1243'),
        ('study_classes', '0001_initial'),
        ('subjects', '0005_auto_20200408_1011'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentCatalogPerSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.PositiveSmallIntegerField()),
                ('subject_name', models.CharField(max_length=64)),
                ('is_coordination_subject', models.BooleanField(default=False)),
                ('avg_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('avg_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('avg_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_after_2nd_examination', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_final', models.DecimalField(blank=True, decimal_places=2, help_text='Represents either the average after 2nd examination (if there is one) or the total average.', max_digits=4, null=True)),
                ('abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_at_risk', models.BooleanField(default=False)),
                ('wants_level_testing_grade', models.BooleanField(default=False)),
                ('has_thesis', models.BooleanField(default=False)),
                ('has_simulation', models.BooleanField(default=False)),
                ('is_exempted', models.BooleanField(default=False)),
                ('is_enrolled', models.BooleanField(default=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_catalogs_per_subject', related_query_name='student_catalog_per_subject', to='profiles.UserProfile')),
                ('study_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_catalogs_per_subject', related_query_name='student_catalog_per_subject', to='study_classes.StudyClass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_catalogs_per_subject', related_query_name='student_catalog_per_subject', to='subjects.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_catalogs_per_subject', related_query_name='teacher_catalog_per_subject', to='profiles.UserProfile')),
            ],
        ),
    ]
