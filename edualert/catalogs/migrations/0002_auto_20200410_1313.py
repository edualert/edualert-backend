# Generated by Django 3.0.4 on 2020-04-10 13:13

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('study_classes', '0001_initial'),
        ('profiles', '0011_auto_20200409_1243'),
        ('catalogs', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='studentcatalogpersubject',
            name='avg_final',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Represents either the average after 2nd examination (if there is one) or the annual average.', max_digits=4, null=True),
        ),
        migrations.CreateModel(
            name='SubjectGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('subject_name', models.CharField(max_length=64)),
                ('academic_year', models.PositiveSmallIntegerField()),
                ('semester', models.PositiveSmallIntegerField()),
                ('taken_at', models.DateField()),
                ('grade', models.PositiveSmallIntegerField()),
                ('grade_type', models.IntegerField(choices=[(1, 'Regular'), (2, 'Thesis')])),
                ('catalog_per_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', related_query_name='grade', to='catalogs.StudentCatalogPerSubject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', related_query_name='grades', to='profiles.UserProfile')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectAbsence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('subject_name', models.CharField(max_length=64)),
                ('academic_year', models.PositiveSmallIntegerField()),
                ('semester', models.PositiveSmallIntegerField()),
                ('taken_at', models.DateField()),
                ('is_founded', models.BooleanField(default=False)),
                ('catalog_per_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', related_query_name='absence', to='catalogs.StudentCatalogPerSubject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', related_query_name='absence', to='profiles.UserProfile')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCatalogPerYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.PositiveSmallIntegerField()),
                ('avg_sem1', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_sem2', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_after_2nd_examination', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('avg_final', models.DecimalField(blank=True, decimal_places=2, help_text='Represents either the average after 2nd examinations (if any) or the annual average.', max_digits=4, null=True)),
                ('abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('unfounded_abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('founded_abs_count_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('second_examinations_count', models.PositiveSmallIntegerField(default=0)),
                ('behavior_grade_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('behavior_grade_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('behavior_grade_annual', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('class_place_by_avg_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_place_by_avg_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_place_by_avg_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_avg_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_avg_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_avg_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_place_by_abs_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_place_by_abs_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_place_by_abs_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_abs_sem1', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_abs_sem2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('school_place_by_abs_annual', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_catalogs_per_year', related_query_name='student_catalog_per_year', to='profiles.UserProfile')),
                ('study_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_catalogs_per_year', related_query_name='student_catalog_per_year', to='study_classes.StudyClass')),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('subject_name', models.CharField(max_length=64)),
                ('academic_year', models.PositiveSmallIntegerField()),
                ('taken_at', models.DateField()),
                ('examination_type', models.IntegerField(choices=[(1, 'Written'), (2, 'Oral')])),
                ('grade1', models.PositiveSmallIntegerField()),
                ('grade2', models.PositiveSmallIntegerField()),
                ('catalog_per_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examination_grades', related_query_name='examination_grade', to='catalogs.StudentCatalogPerSubject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examination_grades', related_query_name='examination_grade', to='profiles.UserProfile')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
