version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  test:
    docker:
      - image: python:3.7-alpine
        environment:
          DATABASE_URL: postgres://dbadmin:password@localhost:5432/test_edualertdb
      - image: postgres:10.7-alpine
        environment:
          POSTGRES_USER: dbadmin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_edualertdb
    steps:
      - checkout
      - python/load-cache
      - run: apk add --no-cache libffi-dev jpeg-dev python3-dev gcc musl-dev postgresql-dev py-pip zlib-dev libpq libmagic libjpeg-turbo
      - python/install-deps
      - python/save-cache
      - run:
          command: ./manage.py test
          name: Test

  setup_environment:
    executor: python/default
    working_directory: /tmp/app
    steps:
      - run:
          name: Setup environment variables
          command: |
            mkdir -p environment
            export TAG=$(echo ${CIRCLE_BRANCH}-$(echo ${CIRCLE_SHA1} | awk '{print substr($0,0,5)}') | sed 's/[\/()]/-/g' | tr -s '-')
            echo "export TAG=${TAG}" >> environment/variables
            echo "export CLUSTER=${CLUSTER}" >> environment/variables
            echo "export CONTAINER_REPO=${CONTAINER_REPO}" >> environment/variables
      - persist_to_workspace:
          root: environment
          paths:
            - variables

  build:
    docker:
      - image: docker:stable
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: /tmp/app/environment
      - run: echo ${CLUSTER} ${CONTAINER_REPO} ${DOCKER_USERNAME}
      - run:
          name: Login to docker
          command: |
            docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
      - run:
          name: Build
          command: |
            source /tmp/app/environment/variables
            sh docker-config/app/build.sh

  deploy-app:
    docker:
      - image: python:3.7-alpine
    steps:
      - attach_workspace:
          at: /tmp/app/environment
      - checkout
      - run:
          name: Deploy
          command: |
            source /tmp/app/environment/variables
            pip install awscli
            set -eo pipefail
            TASK_DEFINITION=app sh scripts/deploy-service.sh

  deploy-app-staging:
    docker:
      - image: python:3.7-alpine
    steps:
      - attach_workspace:
          at: /tmp/app/environment
      - checkout
      - run:
          name: Deploy
          command: |
            source /tmp/app/environment/variables
            pip install awscli
            set -eo pipefail
            ENVIRONMENT=staging TASK_DEFINITION=app sh scripts/deploy-service.sh

  deploy-app-demo:
    docker:
      - image: python:3.7-alpine
    steps:
      - attach_workspace:
          at: /tmp/app/environment
      - checkout
      - run:
          name: Deploy
          command: |
            source /tmp/app/environment/variables
            pip install awscli
            set -eo pipefail
            ENVIRONMENT=demo TASK_DEFINITION=app sh scripts/deploy-service.sh

workflows:
  main:
    jobs:
      - test
      - setup_environment:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - staging
                - demo
      - build:
          requires:
            - setup_environment
          filters:
            branches:
              only:
                - master
                - staging
                - demo
      - deploy-app:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-app-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-app-demo:
          requires:
            - build
          filters:
            branches:
              only: demo
